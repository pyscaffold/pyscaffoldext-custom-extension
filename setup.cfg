# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyscaffoldext-custom-extension
description = PyScaffold extension to create a custom PyScaffold extension
author = Simone Robutti
author-email = simone.robutti@teraki.com
license = MIT
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
url = https://github.com/pyscaffold/pyscaffoldext-custom-extension
project-urls =
    Documentation = https://pyscaffoldext-custom-extension.readthedocs.io/
    Source = https://github.com/pyscaffold/pyscaffoldext-custom-extension/
    Tracker = https://github.com/pyscaffold/pyscaffoldext-custom-extension/issues
    Download = https://pypi.org/project/pyscaffoldext-custom-extension/#files
    Twitter = https://twitter.com/PyScaffold
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Topic :: Utilities
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: POSIX :: Linux
    Operating System :: Unix
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# python_requires = >=3.8

install_requires =
    importlib-metadata; python_version<"3.8"
    pyscaffold>=4.0b1,<5.0a0
    configupdater>=1.1.3,<2
    packaging>=20.7

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install pyscaffoldext-custom-extension[PDF]` like:
# PDF = ReportLab; RXP
testing =
    tox             # required for system tests
    pre-commit      # required for system tests
    setuptools_scm  # required for system tests
    virtualenv      # required for system tests
    configupdater
    pytest
    pytest-cov
    pytest-xdist
    # We keep pytest-xdist in the test dependencies, so the developer can
    # easily opt-in for distributed tests by adding, for example, the `-n 15`
    # arguments in the command-line.

[options.entry_points]
pyscaffold.cli =
    custom_extension = pyscaffoldext.custom_extension.extension:CustomExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov pyscaffoldext.custom_extension --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (deselect with '-m "not slow"')
    system: end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 88
extend-ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[mypy]
ignore_missing_imports = True
pretty = True
show_error_codes = True
show_error_context = True
show_traceback = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0b3
package = custom_extension
extensions =
    cirrus
    namespace
    no_skeleton
    pre_commit
namespace = pyscaffoldext
